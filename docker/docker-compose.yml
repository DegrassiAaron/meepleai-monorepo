version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: meepleai-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-meeple}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-meeplepass}
      POSTGRES_DB: ${POSTGRES_DB:-meepleai}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  qdrant:
    image: qdrant/qdrant:v1.12.4
    container_name: meepleai-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrantdata:/qdrant/storage

  redis:
    image: redis:7-alpine
    container_name: meepleai-redis
    ports:
      - "6379:6379"

  n8n:
    image: n8nio/n8n:1.60.0
    container_name: meepleai-n8n
    ports:
      - "5678:5678"
    environment:
      - GENERIC_TIMEZONE=Europe/Rome
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - EXECUTIONS_DATA_SAVE_ON_PROGRESS=true
      - EXECUTIONS_DATA_SAVE_ON_ERROR=all
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-meepleai}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-meeple}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-meeplepass}
    depends_on:
      - postgres

  meepleagentai-api:
    build:
      context: ../services/meepleagentai
      dockerfile: ./src/Api/Dockerfile
    container_name: meepleagentai-api
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__Postgres=Host=postgres;Database=${POSTGRES_DB:-meepleai};Username=${POSTGRES_USER:-meeple};Password=${POSTGRES_PASSWORD:-meeplepass}
      - QDRANT_URL=http://qdrant:6333
      - REDIS_URL=redis:6379
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-changeme}
      - JWT_ISSUER=${JWT_ISSUER:-http://localhost:8080}
      - ALLOW_ORIGIN=${ALLOW_ORIGIN:-http://localhost:3000}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
      redis:
        condition: service_started

  meepleai-web:
    build:
      context: ../apps/meepleai
      dockerfile: ./Dockerfile
    container_name: meepleai-web
    environment:
      - NEXT_PUBLIC_API_BASE=${NEXT_PUBLIC_API_BASE:-http://localhost:8080}
      - NEXT_PUBLIC_TENANT_ID=${NEXT_PUBLIC_TENANT_ID:-dev}
    ports:
      - "3000:3000"
    depends_on:
      - meepleagentai-api

volumes:
  pgdata:
  qdrantdata:
