# n8n Workflow Manager MCP Server Dockerfile
# Secure, minimal image for n8n API integration

FROM node:23-alpine AS builder

WORKDIR /build

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Copy package files
COPY mcp/n8n/package*.json ./

# Install dependencies
RUN npm install --omit=dev && \
    npm cache clean --force

# Copy source code
COPY mcp/n8n/src ./src

# ============================================================================
# Production stage
# ============================================================================
FROM node:23-alpine

WORKDIR /app

# Copy dependencies from builder
COPY --from=builder --chown=node:node /build/node_modules ./node_modules

# Copy application code
COPY --chown=node:node mcp/n8n/src ./src
COPY --chown=node:node mcp/n8n/package.json ./

# Install minimal runtime dependencies
RUN apk add --no-cache \
    ca-certificates \
    curl \
    && rm -rf /var/cache/apk/*

# Switch to non-root user
USER node

# Environment variables (will be overridden at runtime)
ENV NODE_ENV=production \
    N8N_API_URL=http://n8n:5678/api/v1 \
    N8N_API_TIMEOUT=30000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node -e "process.exit(0)" || exit 1

# Start the MCP server
CMD ["node", "src/index.js"]
