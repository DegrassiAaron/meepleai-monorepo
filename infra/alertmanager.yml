# OPS-05: Alertmanager Configuration
# Error monitoring and alerting for MeepleAI

global:
  # Time to wait before sending notifications about resolved alerts
  resolve_timeout: 5m

  # SMTP configuration for email notifications
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'alertmanager@meepleai.dev'
  smtp_auth_username: 'badsworm@gmail.com'
  smtp_auth_password: '${GMAIL_APP_PASSWORD}'
  smtp_require_tls: true

  # Slack webhook URL (configure via environment variable)
  # Set SLACK_WEBHOOK_URL in your environment or .env file
  # slack_api_url: ${SLACK_WEBHOOK_URL}

# The root route on which each incoming alert enters
route:
  # Group alerts by these labels to reduce notification spam
  # Alerts with the same values for these labels will be grouped together
  group_by: ['alertname', 'service', 'severity']

  # How long to wait before sending the first notification for a group
  # This allows time to collect similar alerts into a single notification
  group_wait: 10s

  # How long to wait before sending notification about new alerts added to a group
  group_interval: 5m

  # How long to wait before re-sending notifications for unresolved alerts
  repeat_interval: 4h

  # Default receiver for all alerts
  receiver: 'default'

  # Child routes for specific alert types
  routes:
    # Critical alerts -> immediate notification
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 15m
      continue: true  # Also send to default receiver

    # Warning alerts -> throttled
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      repeat_interval: 2h

    # RAG/AI specific errors
    - match:
        category: rag
      receiver: 'ai-alerts'
      group_wait: 30s
      repeat_interval: 1h

    # Dependency health alerts (Postgres, Redis, Qdrant)
    - match:
        category: dependency
      receiver: 'dependency-alerts'
      group_wait: 10s
      repeat_interval: 30m

# Receivers define where to send notifications
receivers:
  # Default receiver - console only (for development)
  - name: 'default'
    # No configuration needed - alerts appear in Alertmanager UI

  # Critical alerts - Email notifications enabled
  - name: 'critical-alerts'
    email_configs:
      - to: 'badsworm@gmail.com'
        headers:
          Subject: 'üö® [CRITICAL] {{ .GroupLabels.alertname }} - MeepleAI'
        html: |
          <h2 style="color: #d93025;">üö® CRITICAL ALERT</h2>
          <h3>{{ .GroupLabels.alertname }}</h3>
          {{ range .Alerts }}
          <div style="border-left: 4px solid #d93025; padding-left: 12px; margin: 16px 0;">
            <p><strong>Alert:</strong> {{ .Labels.alertname }}</p>
            <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
            <p><strong>Service:</strong> {{ .Labels.service }}</p>
            <p><strong>Description:</strong> {{ .Annotations.description }}</p>
            <p><strong>Summary:</strong> {{ .Annotations.summary }}</p>
            <p><strong>Started:</strong> {{ .StartsAt.Format "2006-01-02 15:04:05 MST" }}</p>
            {{ if .Annotations.dashboard_url }}
            <p><a href="{{ .Annotations.dashboard_url }}">View Dashboard</a></p>
            {{ end }}
            {{ if .Annotations.runbook_url }}
            <p><a href="{{ .Annotations.runbook_url }}">View Runbook</a></p>
            {{ end }}
          </div>
          {{ end }}
        send_resolved: true

    # SLACK: Uncomment to also send to Slack
    # slack_configs:
    #   - api_url: ${SLACK_WEBHOOK_URL}
    #     channel: '#alerts'
    #     title: 'üö® [CRITICAL] {{ .GroupLabels.alertname }}'

  # Warning alerts - Email notifications enabled
  - name: 'warning-alerts'
    email_configs:
      - to: 'badsworm@gmail.com'
        headers:
          Subject: '‚ö†Ô∏è [WARNING] {{ .GroupLabels.alertname }} - MeepleAI'
        html: |
          <h2 style="color: #ea8600;">‚ö†Ô∏è WARNING ALERT</h2>
          <h3>{{ .GroupLabels.alertname }}</h3>
          {{ range .Alerts }}
          <div style="border-left: 4px solid #ea8600; padding-left: 12px; margin: 16px 0;">
            <p><strong>Alert:</strong> {{ .Labels.alertname }}</p>
            <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
            <p><strong>Description:</strong> {{ .Annotations.description }}</p>
            <p><strong>Started:</strong> {{ .StartsAt.Format "2006-01-02 15:04:05 MST" }}</p>
            {{ if .Annotations.dashboard_url }}
            <p><a href="{{ .Annotations.dashboard_url }}">View Dashboard</a></p>
            {{ end }}
          </div>
          {{ end }}
        send_resolved: true

  # AI/RAG specific alerts
  - name: 'ai-alerts'
    # Configure notifications here if needed

  # Dependency health alerts
  - name: 'dependency-alerts'
    # Configure notifications here if needed

# Inhibition rules - suppress certain alerts when others are firing
inhibit_rules:
  # Inhibit warning alerts if critical alert is firing for the same service
  - source_match:
      severity: critical
    target_match:
      severity: warning
    equal: ['alertname', 'service']

  # Inhibit dependency alerts if the main service alert is firing
  - source_match:
      alertname: 'ServiceDown'
    target_match:
      category: dependency
    equal: ['service']
