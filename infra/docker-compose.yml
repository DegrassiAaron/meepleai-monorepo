version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: meepleai-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-meeple}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-meeplepass}
      POSTGRES_DB: ${POSTGRES_DB:-meepleai}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - meepleai

  qdrant:
    image: qdrant/qdrant:v1.12.4
    container_name: meepleai-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrantdata:/qdrant/storage
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:6333/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - meepleai

  redis:
    image: redis:7-alpine
    container_name: meepleai-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - meepleai

  n8n:
    image: n8nio/n8n:1.60.0
    container_name: meepleai-n8n
    env_file:
      - ./env/n8n.env.dev
    ports:
      - "5678:5678"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - meepleai

  api:
    build:
      context: ../apps/api
      dockerfile: ./src/Api/Dockerfile
    container_name: meepleai-api
    env_file:
      - ./env/api.env.dev
    environment:
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__Postgres: Host=postgres;Database=${POSTGRES_DB:-meepleai};Username=${POSTGRES_USER:-meeple};Password=${POSTGRES_PASSWORD:-meeplepass}
      QDRANT_URL: http://qdrant:6333
      REDIS_URL: redis:6379
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s
    networks:
      - meepleai

  web:
    build:
      context: ../apps/web
      dockerfile: ./Dockerfile
    container_name: meepleai-web
    env_file:
      - ./env/web.env.dev
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/ || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 12
      start_period: 60s
    networks:
      - meepleai

volumes:
  pgdata:
  qdrantdata:

networks:
  meepleai:
    driver: bridge
